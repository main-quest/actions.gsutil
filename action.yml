name: "gsutil shortcut"
description: "Issues gsutil commands while also detecting the project id from the provided service account key"
inputs:
  key:
    description: Service account json key, base64 encrypted or not
    required: true
  do:
    description: Command to exec
    required: true

outputs:
  project: 
    description: "The project id parsed from the key file. Might be removed as it's not needed anymore in the internal implementation"
    value: ${{ steps.parser_unix.outputs.project_id }}${{ steps.parser_win.outputs.project_id }}
  # email: 
  #   description: "The email of the service account parsed from the key file"
  #   value: ${{ steps.parser.outputs.project_id }}
    
runs:
  using: "composite"
  steps:  
    #OS/
    - name: Parse key [UNIX]
      id: parser_unix
      if: runner.os != 'Windows'
      shell: bash
      run: |
        s="${{ github.action_path }}/parser.sh"
        chmod +x "$s"
        GITHUB_OUTPUT=$GITHUB_OUTPUT  "$s" "${{ inputs.key }}"

    - name: Parse key [WIN]
      id: parser_win
      if: runner.os == 'Windows'
      shell: wsl bash --noprofile --norc -euo pipefail "$(s="$(wslpath '{0}')" && sed -i 's/\r$//' "$s" && echo "$s")"
      run: |
        s=$(wslpath "${{ github.action_path }}/parser.sh")
        chmod +x "$s"
        GITHUB_OUTPUT=$GITHUB_OUTPUT "$s" "${{ inputs.key }}"
    #/OS


    #OS/
    # - name: Running gsutil command [OSX]
    - name: Running gsutil command [UNIX]
      # if: runner.os == 'macOS'
      if: runner.os != 'Windows'
      shell: bash
      run: |
        key="${{ inputs.key }}"
        key_is_encrypted="${{ steps.parser_unix.outputs.key_is_encrypted }}${{ steps.parser_win.outputs.key_is_encrypted }}"
        project_id="${{ steps.parser_unix.outputs.project_id }}${{ steps.parser_win.outputs.project_id }}"
        v_do="${{ inputs.do }}"
        
        s="${{ github.action_path }}/gsutil_tool.sh"
        chmod +x "$s"
        "$s" "$key" "$key_is_encrypted" "$project_id" "$v_do"

    - name: Running gsutil command [WIN]
      if: runner.os == 'Windows'
      shell: wsl bash --noprofile --norc -euo pipefail "$(s="$(wslpath '{0}')" && sed -i 's/\r$//' "$s" && echo "$s")"
      run: |
        key="${{ inputs.key }}"
        key_is_encrypted="${{ steps.parser_unix.outputs.key_is_encrypted }}${{ steps.parser_win.outputs.key_is_encrypted }}"
        project_id="${{ steps.parser_unix.outputs.project_id }}${{ steps.parser_win.outputs.project_id }}"
        v_do="${{ inputs.do }}"
        
        s=$(wslpath "${{ github.action_path }}/gsutil_tool.sh")
        chmod +x "$s"
        "$s" "$key" "$key_is_encrypted" "$project_id" "$v_do"
    #/OS

    # Dropping usage of this dockerized action (can only be used on linux atm 17 Nov 2021), since we can just reuse the one for macOS
    # - name: Running gsutil command [UNIX]
    #   if: runner.os != 'Windows' && runner.os != 'macOS'
    #   uses: actions-hub/gcloud@master
    #   env:
    #     PROJECT_ID: ${{ steps.parser_unix.outputs.project_id }}${{ steps.parser_win.outputs.project_id }}
    #     APPLICATION_CREDENTIALS: ${{ inputs.key }}
    #   with:
    #     args: ${{ inputs.do }}
    #     cli: gsutil
    #/OS
